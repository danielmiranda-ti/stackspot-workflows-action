name: Apply Plugin
run-name: ${{ inputs.correlation_id }}
on: 
  workflow_call:
    inputs:
      correlation_id:
        description: Correlation id
        type: string
        required: true
      inputs:
        description: Workflow inputs (json)
        type: string
        required: true
      workflow_config:
        description: Workflow config (json)
        type: string
        required: true
    secrets:
      secrets:
        description: Secrets info (json)
        required: true
env:
  STK: ${{ fromJson(inputs.workflow_config).stk }}
  DEBUG: ${{ fromJson(inputs.workflow_config).debug }}
jobs:

  validate-inputs:
    name: Validate JSON Inputs
    runs-on: ubuntu-latest
    steps:
      - name: Debug inputs
        if: env.DEBUG
        run: |
          echo "plugin_name: ${{ fromJson(inputs.inputs).plugin_name }}"
          echo "cli_login_realm: ${{ fromJson(inputs.inputs).cli_login_realm }}"
          echo "cli_login_email: ${{ fromJson(inputs.inputs).cli_login_email }}"
          echo "workspace_slug: ${{ fromJson(inputs.inputs).workspace_slug}}"
      - name: "Validate Input: 'name'"
        if: fromJson(inputs.inputs).plugin_name == ''
        run: |
         echo "ERROR: 'plugin_name' field not found in json."
         exit 1
      - name: "Validate Input: 'cli_login_realm'"
        if: fromJson(inputs.inputs).cli_login_realm == ''
        run: |
         echo "ERROR: 'realm' field not found in json."
         exit 1
      - name: "Validate Input: 'cli_login_email'"
        if: fromJson(inputs.inputs).cli_login_email == ''
        run: |
         echo "ERROR: 'cli_login_email' field not found in json."
         exit 1
      - name: "Validate Input: 'workspace_slug'"
        if: fromJson(inputs.inputs).workspace_slug == ''
        run: |
         echo "ERROR: 'workspace_slug' field not found in json."
         exit 1

  apply-plugin-using-stk-cli:
    name: Apply Stackspot Plugin
    needs: validate-inputs
    env:
      INPUTS: '${{ inputs.inputs }}'
    runs-on: ${{ fromJson(inputs.workflow_config).runner }}
    steps:
      - name: Checkout workflows repo
        uses: actions/checkout@v3
        with:
          repository: ${{ fromJson(inputs.workflow_config).origin_repository }}
          ref: ${{ fromJson(inputs.workflow_config).origin_branch }}

      - name: Install STK
        uses: ./github-actions/install-stk-cli
        with: 
          stk: ${{ fromJson(inputs.workflow_config).stk }}
      
      - name: Login STK
        uses: ./github-actions/login-stk
        with: 
          stk: ${{ fromJson(inputs.workflow_config).stk }}
          email: ${{ fromJson(inputs.inputs).cli_login_email }}
          pat: ${{ fromJson(secrets.secrets).cli_token }}
          realm: ${{ fromJson(inputs.inputs).cli_login_realm }}
      
      - name: Use workspace
        run: |
         $STK use workspace ${{ fromJson(inputs.inputs).workspace_slug }}


      - name: Checkout the user repo
        id: checkout_user_repo
        uses:  ./github-actions/clone-external-repo
        with:
          github_org: foobar
          default_branch: stackspot/merge-apply
          app_name: foobar
          path: user_repo
          secret_git_token: ${{ fromJson(secrets.secrets).scm_token }}
          github_url: https://github.com/stack-spot/stackspot-workflows-action
      
      # - name: Run action
        # env:
        #   NAME: ${{ fromJson(inputs.inputs).plugin_name }}
        #   INPUTS: ${{ toJson(fromJson(inputs.inputs).plugin_inputs) }}
        #   CI: ${{ toJson(fromJson(inputs.inputs).plugin_connectors) }}

      
  #       run: |
  #         source .github/workflows/scripts/enable_colors.sh
  #         conn=""
  #         if [ "${CI}" != "null" ]; then 
  #             conn=" --connection-interfaces $(echo $CI | jq . -c)"
  #         fi
  #         env=""

  #         if [ "${ACTION_ENV}" != "null" ]; then
  #           env=" --env $ACTION_ENV"
  #         fi

  #         if [ "${INPUTS}" != "null" ]; then 
  #             inputs_short=" --inputs-json $(echo $INPUTS | jq . -c)"
  #             echo $inputs_short
  #         fi

  #         echo -e "\n${green}âš¡ Running Action: ${u_cyan}$NAME"
  #         echo -e "$STK run action $NAME $inputs_short $conn $env \n" 
  #         $STK run action $NAME $inputs_short $conn $env
      
  #     - name: Show Error Log
  #       if: failure()
  #       run: |
  #         cat ~/.$STK/logs/*