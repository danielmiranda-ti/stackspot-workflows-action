name: Create
run-name: ${{ inputs.correlation_id }}
on: 
  workflow_call:
    inputs:
      # correlation_id:
      #   description: Correlation id
      #   type: string
      #   required: true
      create_values:
        description: create
        type: string
        required: true
      # create_type:
      #   description: type
      #   type: string
      #   required: true
      # cli_login:
      #   description: CLI login info (json)
      #   type: string
      #   required: true
      # workspace_slug:
      #   description: Workspace name
      #   type: string
      #   required: true
      # actions:
      #   description: Actions (json)
      #   type: string
      #   required: false
      # github_org:
      #   description: GitHub organization value (name)
      #   type: string
      #   required: true
      # runner:
      #   description: Runner name
      #   type: string
      #   default: ubuntu-latest
      #   required: false
      # config:
      #   description: Extra config (json)
      #   type: string
      #   required: false
      #   default: "{\"default_branch\": \"main\", \"debug\": true, \"stk_version\": \"stk-beta\"}"
    secrets:
        cli:
          description: CLI secret login
          required: true
        git:
          description: PAT secret git
          required: true


jobs:
  validate-inputs:

    name: Validate Inputs
    runs-on: ubuntu-latest
    steps:
      - name: Debug inputs
        # if: ${{ fromJson(github.event.inputs.config).debug }}
        run: |
          echo "runner: ${{ github.event.inputs.runner }}"
          echo "create_values: ${{ github.event.inputs.create_values }}"
          echo "cli_login: ${{ github.event.inputs.cli_login }}"
          echo "workspace_slug: ${{ github.event.inputs.workspace_slug }}"
          echo "action: ${{ github.event.inputs.actions }}"
          echo "config: ${{ github.event.inputs.config }}"
      - name: "Validate Input: 'create.name'"
        if: fromJson(github.event.inputs.create).name == ''
        run: |
         echo "ERROR: 'name' field not found in json for 'create' input"
         exit 1
      - name: "Validate Input: 'create.description'"
        if: fromJson(github.event.inputs.create).description == ''
        run: |
         echo "ERROR: 'description' field not found in json for 'create' input"
         exit 1
      - name: "Validate Input: 'create.s'"
        if: fromJson(github.event.inputs.create).s == ''
        run: |
         echo "ERROR: 'stack' field not found in json for 'create' input"
         exit 1
      - name: "Validate Input: 'cli_login.realm'"
        if: fromJson(github.event.inputs.cli_login).realm == ''
        run: |
         echo "ERROR: 'realm' field not found in json for 'cli_login' input"
         exit 1
      - name: "Validate Input: 'cli_login.email'"
        if: fromJson(github.event.inputs.cli_login).email == ''
        run: |
         echo "ERROR: 'email' field not found in json for 'cli_login' input"
         exit 1


  use-workspace:
    name: Use Workspace
    runs-on: ${{ github.event.inputs.runner }}
    needs: validate-inputs
    steps:
      - name: Checkout workflows repo
        uses: actions/checkout@v3
      - name: Cache
        uses: ./github-actions/restore-stk-cache
        with: 
          stk: ${{ env.STK }}
      - name: Install STK
        uses: ./github-actions/install-stk-cli
        with: 
          stk: ${{ env.STK }}
      - name: Login STK
        uses: ./github-actions/login-stk
        with: 
          stk: ${{ env.STK }}
          email: ${{ fromJson(github.event.inputs.cli_login).email }}
          pat: ${{ secrets.cli }}
          realm: ${{ fromJson(github.event.inputs.cli_login).realm }}
      - name: Use Workspace
        run: |
          $STK use workspace ${{ github.event.inputs.workspace_slug }}
      - name: Show Error Log
        if: failure()
        run: |
          cat ~/.$STK/logs/*

  run-before-actions:
    name: Run before actions
    runs-on: ${{ github.event.inputs.runner }}
    if: toJson(fromJson(github.event.inputs.actions).before) != '[]'
    needs: use-workspace
    env:
      DEBUG: ${{ fromJson(github.event.inputs.config).debug }}
    steps:
      - name: Checkout workflows repo
        uses: actions/checkout@v3
      - name: Restore STK Cache
        uses: ./github-actions/restore-stk-cache
        with: 
          stk: ${{ env.STK }}
      - name: Run actions
        run: |
          source .github/workflows/scripts/enable_colors.sh
          if $DEBUG
          then
            export APPLY_PLUGIN_ENABLE_DEBUG=true
            export COMMAND_ARGS_ENABLE_DEBUG=true
          fi
          i=0
          echo -e "\n"
          for row in $(echo '${{ github.event.inputs.actions }}' | jq '.before' | jq -r '.[] | @base64'); do
              i=$((i+1))
              _jq() {
                echo "${row}" | base64 --decode | jq ${1} "${2}"
              }

              name=$(_jq -r '.name')
              inputs=$(_jq -c '.inputs')
              createRepo=$(_jq -r '.create_repo')

              if $createRepo
              then
                inputsRepo=$(echo "{\"org\": \"${{ fromJson(github.event.inputs.config).github_org }}\",\"token\": \"${{ secrets.git }}\", \"name\": \"${{ fromJson(github.event.inputs.create).name }}\", \"description\": \"${{ fromJson(github.event.inputs.create).description }}\"} ")
                inputs=$(echo "$inputsRepo" "$inputs" | jq -cs add)
              fi

              echo -e "\n${green}⚡ Running Action $i: ${u_cyan}$name"
              echo -e "$STK run action $name --inputs-json '$(echo "$inputs" | jq)' --non-interactive\n" 
              $STK run action "$name" --inputs-json "$inputs" --non-interactive
          done
      - name: Show Error Log
        if: failure()
        run: |
          cat ~/.$STK/logs/*

  create:
    name: Create 
    runs-on: ${{ github.event.inputs.runner }}
    needs: [use-workspace, run-before-actions, validate-inputs]
    if: |
      always() &&
      needs.use-workspace.result == 'success' &&
      (needs.run-before-actions.result == 'success' || needs.run-before-actions.result == 'skipped')
    env:
      DEBUG: ${{ fromJson(github.event.inputs.config).debug }}
    steps:
      - name: Checkout workflows repo
        uses: actions/checkout@v3
        with:
          persist-credentials: false
          path: workflow_repo
      - name: Checkout the user repo
        id: checkout_user_repo
        uses:  ./workflow_repo/github-actions/clone-external-repo
        with:
          github_org: ${{ fromJson(github.event.inputs.config).github_org }}
          default_branch: ${{ fromJson(github.event.inputs.config).default_branch }}
          app_name: ${{ fromJson(github.event.inputs.create).name }}
          path: user_repo
          token: ${{ secrets.git }}
          github_url: ${{ fromJson(github.event.inputs.create).repo }}
      - name: Restore STK Cache
        uses: ./workflow_repo/github-actions/restore-stk-cache 
        with: 
          stk: ${{ env.STK }}
      - name: Set git username
        run: |
          git config --global user.email "${{ fromJson(github.event.inputs.cli_login).email }}"
          git config --global user.name "${{ fromJson(github.event.inputs.cli_login).email }}"
      - name: Create ${{ github.event.inputs.type}}
        env: 
          NAME: ${{ fromJson(github.event.inputs.create).name }}
          INPUTS: ${{ toJson(fromJson(github.event.inputs.create).inputs) }}
          CI: ${{ toJson(fromJson(github.event.inputs.create).connectors) }}
          DESCRIPTION: ${{ fromJson(github.event.inputs.create).description }}
        working-directory: user_repo
        run: |
          source ../workflow_repo/.github/workflows/scripts/enable_colors.sh
          if $DEBUG
          then
            export APPLY_PLUGIN_ENABLE_DEBUG=true
            export COMMAND_ARGS_ENABLE_DEBUG=true
          fi

          conn=""
          connPrint=""
          if [ "${CI}" != "null" ]; then 
             conn=" -ci $(echo $CI | jq . -c)"
             connPrint=" -ci '$(echo $CI | jq )'" 
          fi

          inputsValue="{}"
          inputsPrint=""
          if [ "${INPUTS}" != "null" ]; then 
             inputsValue=$(echo $INPUTS | jq . -c)
             inputsPrint=" --inputs-json '$(echo $INPUTS | jq )'" 
          fi

          echo -e "\n${green}⚡ Running create ${{ github.event.inputs.type}}: ${u_cyan}$NAME"
          echo -e "$STK create ${{ github.event.inputs.type}} $NAME -s ${{ fromJson(github.event.inputs.create).s }} $connPrint -r https://github.com/${{ steps.checkout_user_repo.outputs.repo }} -d '$DESCRIPTION' $inputsPrint\n" 

          ${{ env.STK }} create ${{ github.event.inputs.type}} $NAME -s ${{ fromJson(github.event.inputs.create).s }} $conn -r https://github.com/${{ steps.checkout_user_repo.outputs.repo }} -d "$DESCRIPTION" --inputs-json "$inputsValue"
      - name: Register ${{ github.event.inputs.type}}
        working-directory: user_repo
        run: |
         cd ${{ fromJson(github.event.inputs.create).name }}
         ${{ env.STK }} register ${{ github.event.inputs.type}}
      - name: Commit and Push.
        working-directory: user_repo
        run: |
         if [[ `git status --porcelain` ]]; then
            rm -rf ${{ fromJson(github.event.inputs.create).name }}/.git
            cp -r ${{ fromJson(github.event.inputs.create).name }}/. .
            rm -fr ${{ fromJson(github.event.inputs.create).name }}
            git add -A
            git commit -am "stackspot initial commit"
            git push
         fi
      - name: Show Error Log
        if: failure()
        run: |
          cat ~/.$STK/logs/*

  run-after-actions:
    name: Run after actions
    runs-on: ${{ github.event.inputs.runner }}
    needs: create
    if: fromJson(github.event.inputs.actions).after != ''
    steps:
      - name: Checkout workflows repo
        uses: actions/checkout@v3
        with:
          persist-credentials: false
          path: workflow_repo
      - name: Checkout the user repo
        id: checkout_user_repo
        uses:  ./workflow_repo/github-actions/clone-external-repo
        with:
          github_org: ${{ fromJson(github.event.inputs.config).github_org }}
          app_name: ${{ fromJson(github.event.inputs.create).name }}
          path: user_repo
          token: ${{ secrets.git }}
          github_url: ${{ fromJson(github.event.inputs.create).repo }}
      - name: Restore STK Cache
        uses: ./workflow_repo/github-actions/restore-stk-cache 
        with: 
          stk: ${{ env.STK }}
      - name: Run actions
        working-directory: user_repo
        run: |
          source ../workflow_repo/.github/workflows/scripts/enable_colors.sh
          git config --global user.email "${{ fromJson(github.event.inputs.cli_login).email }}"
          git config --global user.name "${{ fromJson(github.event.inputs.cli_login).email }}"
          if $DEBUG
          then
            export APPLY_PLUGIN_ENABLE_DEBUG=true
            export COMMAND_ARGS_ENABLE_DEBUG=true
          fi
          i=0
          echo -e "\n"
          for row in $(echo '${{ github.event.inputs.actions }}' | jq '.after' | jq -r '.[] | @base64'); do
              i=$((i+1))
              _jq() {
                echo "${row}" | base64 --decode | jq ${1} "${2}"
              }

              name=$(_jq -r '.name')
              inputs=$(_jq -c '.inputs')

              echo -e "\n${green}⚡ Running Action $i: ${u_cyan}$name"
              echo -e "$STK run action $name --inputs-json '$(echo "$inputs" | jq)' --non-interactive\n" 
              $STK run action "$name" --inputs-json "$inputs" --non-interactive
          done
      - name: Commit and Push.
        working-directory: user_repo
        run: |
         if [[ `git status --porcelain` ]]; then
            git add -A
            git commit -am "stackspot commit after actions"
            git push
         fi

      - name: Show Error Log
        if: failure()
        run: |
          cat ~/.$STK/logs/*
